{"version":3,"sources":["context/GlobalContext.js","protected.route.js","assets/logo.svg","components/dashboard/Header.jsx","components/dashboard/Footer.jsx","assets/bitcoin2.jpg","components/news/NewsList.jsx","components/news/News.jsx","components/subscription/Subscription.jsx","components/dashboard/Home.jsx","assets/bitcoin.jpg","components/dashboard/Dashboard.jsx","components/articles/ArticlesList.jsx","assets/bitcoin1.jpg","components/articles/Articles.jsx","components/user/Login.jsx","components/user/Register.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","user","GlobalContext","createContext","ProtectedRoute","Component","component","rest","useContext","token","sessionStorage","getItem","render","props","to","pathname","state","from","location","Header","history","useHistory","userDetails","userFirstName","jwt_decode","JSON","parse","sub","firstName","Navbar","sticky","Brand","href","alt","src","logo","width","height","className","Collapse","id","Nav","title","onClick","removeItem","push","Footer","NewsList","data","ListGroup","Item","as","url","target","rel","Image","urlToImage","News","useState","setData","showNewsLoader","setShowNewsLoader","useEffect","axios","get","then","response","result","catch","error","console","log","Spinner","animation","size","role","aria-hidden","articles","map","news","index","Subscription","successMsg","setSuccessMsg","useForm","register","handleSubmit","errors","formState","Form","onSubmit","e","postData","emailid","email","value","post","setTimeout","Row","Col","sm","Control","type","autoComplete","placeholder","required","pattern","message","xs","Button","style","color","Home","Container","fluid","bitcoin","Card","Body","Text","maxHeight","Dashboard","cryptodata","setCryptodata","getCryptoData","a","res","formatInDollar","num","maxDigits","Intl","NumberFormat","currency","format","Table","striped","bordered","hover","colSpan","coin","image","marginRight","symbol","toUpperCase","price_change_percentage_24h","Number","toFixed","current_price","market_cap","ArticlesList","schema","yup","shape","description","Articles","showLoader","setShowLoader","showArticles","setShowArticles","isArticleAdded","setIsArticleAdded","setarticles","resolver","yupResolver","reset","art","stringify","htmlFor","name","Group","rows","backgroundColor","password","min","max","Login","setUser","md","span","offset","success","setItem","autoFocus","lastName","confirmPassword","oneOf","Register","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4072cfbc.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst initialState = {\n  user: null,\n};\n\nexport const GlobalContext = createContext(initialState);\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { GlobalContext } from \"./context/GlobalContext\";\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  // console.log(\"Global user\", useContext(GlobalContext));\n  // console.log(\"session token \", sessionStorage.getItem(\"token\"));\n  let user = useContext(GlobalContext);\n  // console.log(\"user token AUTH \", user?.token);\n  user = user?.token || {\n    token: sessionStorage.getItem(\"token\"),\n  };\n  // console.log(\"user AUTH = \", user);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (user?.token || sessionStorage.getItem(\"token\")) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.4d0ebbf7.svg\";","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport jwt_decode from \"jwt-decode\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../assets/logo.svg\";\n\nexport default function Header() {\n  const history = useHistory();\n  let userDetails = null;\n  let userFirstName = \"\";\n  let user = useContext(GlobalContext);\n  user = user?.token || {\n    token: sessionStorage.getItem(\"token\"),\n  };\n  const logout = () => {\n    sessionStorage.removeItem(\"token\");\n    history.push(\"/\");\n  };\n  // console.log(\"header user\", user);\n  if (user?.token) {\n    userDetails = jwt_decode(user.token);\n    userFirstName = JSON.parse(userDetails.sub)[0].firstName;\n  }\n  return (\n    <>\n      <Navbar sticky=\"top\">\n        <Navbar.Brand href=\"/\">\n          <img\n            alt=\"Shri's Cryptocurrency MarketPlace\"\n            src={logo}\n            width=\"48\"\n            height=\"48\"\n            className=\"d-inline-block\"\n          />{\" \"}\n          <h1 className=\"d-inline-block m-0 align-middle\">\n            Shri Cryptocurrency MarketPlace\n          </h1>\n        </Navbar.Brand>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            {user?.token ? (\n              <>\n                {user?.token && (\n                  <span className=\"nav-link font-weight-bold\">\n                    Welcome {userFirstName} |{\" \"}\n                  </span>\n                )}\n                <Link to=\"/\" className=\"nav-link\" title=\"Home\">\n                  Home\n                </Link>\n                <Link to=\"/dashboard\" className=\"nav-link\" title=\"Dashboard\">\n                  Dashboard\n                </Link>\n                <Link to=\"/articles\" className=\"nav-link\" title=\"Articles\">\n                  Articles\n                </Link>\n                <Link\n                  to=\"/\"\n                  className=\"nav-link\"\n                  onClick={() => {\n                    logout();\n                  }}\n                  title=\"Logout\"\n                >\n                  Logout\n                </Link>\n              </>\n            ) : (\n              <>\n                {!user?.token && (\n                  <span className=\"nav-link font-weight-bold\">\n                    Welcome Guest |{\" \"}\n                  </span>\n                )}\n                <Link to=\"/register\" className=\"nav-link\" title=\"Register\">\n                  Register\n                </Link>\n                <Link to=\"/login\" className=\"nav-link\" title=\"Log In\">\n                  Log In\n                </Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <>\n      <footer className=\"Container\">\n        <p className=\"p-2 m-0\">© All rights reserved 2021</p>\n      </footer>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bitcoin2.08a9a425.jpg\";","import React from \"react\";\nimport { Image, ListGroup } from \"react-bootstrap\";\n\nexport default function NewsList({ data }) {\n  //   console.log(\"artiles\", data);\n  return (\n    <>\n      <ListGroup.Item as=\"li\">\n        <a href={data.url} title={data.title} target=\"_blank\" rel=\"noreferrer\">\n          <Image src={data.urlToImage} className=\"news-img\" />\n          {data.title}\n        </a>\n      </ListGroup.Item>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { ListGroup, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nimport NewsList from \"./NewsList\";\n\nexport default function News() {\n  const [data, setData] = useState([]);\n  const [showNewsLoader, setShowNewsLoader] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/news\")\n      .then((response) => {\n        const result = JSON.parse(response.data.data);\n        setData(result);\n        setShowNewsLoader(false);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  return (\n    <>\n      <ListGroup as=\"ul\">\n        {showNewsLoader ? (\n          <div className=\"text-center\">\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"lg\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n          </div>\n        ) : (\n          data?.articles.map((news, index) => {\n            return <NewsList key={index} data={news} />;\n          })\n        )}\n      </ListGroup>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\nexport default function Subscription() {\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data, e) => {\n    // console.log(JSON.stringify(data));\n    let postData = {\n      emailid: data.email,\n    };\n    if (e.target[0].value) {\n      axios\n        .post(\"/api/subscribe\", postData)\n        .then((response) => {\n          const result = JSON.parse(response.data.data);\n          result &&\n            setSuccessMsg(\"Congratulations! You have successfully subscribed.\");\n          setTimeout(() => {\n            postData = {};\n            e.target[0].value = \"\";\n            setSuccessMsg(\"\");\n          }, 2000);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Row className=\"align-items-center\">\n          <Col sm={12} className=\"my-1\">\n            <p>\n              Subscribe to our free email to receive the newest crypto news,\n              updates, and reports.\n            </p>\n          </Col>\n          <Col sm={8} className=\"my-1\">\n            <Form.Control\n              id=\"emailid\"\n              type=\"email\"\n              autoComplete=\"off\"\n              placeholder=\"Enter your email\"\n              {...register(\"email\", {\n                required: \"Email is required\",\n                pattern: {\n                  value: /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/,\n                  message: \"Incorrect email format\",\n                },\n              })}\n              className={errors.email && \"required\"}\n            />\n          </Col>\n          <Col xs=\"auto\" className=\"my-1\">\n            <Button type=\"submit\">Subscribe</Button>\n          </Col>\n          {errors.email && <Col>{errors.email.message}</Col>}\n          {successMsg && <Col style={{ color: \"#60a906\" }}>{successMsg}</Col>}\n        </Row>\n      </Form>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Container, Row, Col, Card, Image } from \"react-bootstrap\";\nimport bitcoin from \"../../assets/bitcoin2.jpg\";\nimport News from \"../news/News\";\nimport Subscription from \"../subscription/Subscription\";\n\nexport default function Home() {\n  return (\n    <>\n      <Header />\n      <main className=\"Container\" id=\"main\">\n        <Container fluid>\n          <Row>\n            <Col sm={8} className=\"p-4\">\n              <Image src={bitcoin} className=\"banner-img\" />\n              <Card className=\"mt-4\">\n                <Card.Header as=\"h5\">What is cryptocurrency?</Card.Header>\n                <Card.Body>\n                  {/* <Card.Title>Special title treatment</Card.Title> */}\n                  <Card.Text>\n                    Cryptocurrency is a type of online payment that may be used\n                    to buy and sell products and services. Many businesses have\n                    created their own currencies, known as tokens, that can be\n                    exchanged for the goods or services that the business\n                    offers. Consider them to be arcade tokens or casino chips.\n                    To obtain the item or service, we will need to swap actual\n                    money for bitcoin.\n                  </Card.Text>\n                  <Card.Text>\n                    Blockchain is the technology that enables cryptocurrency to\n                    function. Blockchain is a decentralized system that\n                    organizes and records transactions across multiple\n                    computers. The security of this technology is part of its\n                    attraction. We may be aware with the most popular versions,\n                    Bitcoin and Ethereum, but according to CoinLore, there are\n                    over 5,000 other cryptocurrencies in circulation. While this\n                    statement is accurate, it falls short of capturing what\n                    makes Bitcoin so special and enticing to so many investors.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col sm={4} className=\"p-4\">\n              <Card className=\"mb-4\">\n                <Card.Header as=\"h5\">Newsletter Subscription</Card.Header>\n                <Card.Body>\n                  <Subscription />\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Header as=\"h5\">Cryptocurrency News</Card.Header>\n                <Card.Body className=\"news-list\" style={{ maxHeight: \"100vh\" }}>\n                  <News />\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n      <Footer />\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bitcoin.0b202fb1.jpg\";","import React, { useEffect, useState } from \"react\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Image,\n  Spinner,\n  Table,\n} from \"react-bootstrap\";\nimport bitcoin from \"../../assets/bitcoin.jpg\";\nimport axios from \"axios\";\nimport News from \"../news/News\";\nimport Subscription from \"../subscription/Subscription\";\n\nexport default function Dashboard() {\n  const [cryptodata, setCryptodata] = useState({});\n  const [showNewsLoader, setShowNewsLoader] = useState(true);\n  const getCryptoData = async () => await axios.get(\"/api/cryptos\");\n\n  useEffect(() => {\n    const data = getCryptoData();\n    data\n      .then((res) => {\n        setCryptodata(res.data);\n        setShowNewsLoader(false);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  const formatInPercent = (num) => `${Number(num).toFixed(2)}%`;\n  const formatInDollar = (num, maxDigits) =>\n    Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"usd\",\n      maxDigits,\n    }).format(num);\n\n  return (\n    <>\n      <Header />\n      <main className=\"Container\" id=\"main\">\n        <Container fluid>\n          <Row>\n            <Col sm={8} className=\"p-4\">\n              <Image src={bitcoin} className=\"banner-img\" />\n              <Card className=\"mt-4\">\n                <Card.Header as=\"h5\">\n                  Top 100 Cryptocurrency Prices by Market Cap\n                </Card.Header>\n                <Card.Body>\n                  <Card.Text as=\"div\">\n                    <Table striped bordered hover size=\"sm\">\n                      <thead>\n                        <tr>\n                          <th>Rank</th>\n                          <th>Symbol</th>\n                          <th>24h Change</th>\n                          <th>Price</th>\n                          <th>Market cap</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {showNewsLoader ? (\n                          <tr>\n                            <td colSpan=\"5\">\n                              <div className=\"text-center\">\n                                <Spinner\n                                  as=\"span\"\n                                  animation=\"border\"\n                                  size=\"lg\"\n                                  role=\"status\"\n                                  aria-hidden=\"true\"\n                                />\n                              </div>\n                            </td>\n                          </tr>\n                        ) : (\n                          cryptodata.map((coin, index) => (\n                            <tr key={coin.id}>\n                              <td>{index + 1}</td>\n                              <td>\n                                <Image\n                                  src={coin.image}\n                                  style={{\n                                    width: 25,\n                                    height: 25,\n                                    marginRight: 10,\n                                  }}\n                                  className=\"banner-img\"\n                                />\n                                {coin.symbol.toUpperCase()}\n                              </td>\n                              <td>\n                                <span\n                                  className={\n                                    coin.price_change_percentage_24h > 0\n                                      ? \"text-success\"\n                                      : \"text-danger\"\n                                  }\n                                >\n                                  {formatInPercent(\n                                    coin.price_change_percentage_24h\n                                  )}\n                                </span>\n                              </td>\n                              <td>{formatInDollar(coin.current_price, 20)}</td>\n                              <td>{formatInDollar(coin.market_cap, 12)}</td>\n                            </tr>\n                          ))\n                        )}\n                      </tbody>\n                    </Table>\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col sm={4} className=\"p-4\">\n              <Card className=\"mb-4\">\n                <Card.Header as=\"h5\">Newsletter Subscription</Card.Header>\n                <Card.Body>\n                  <Subscription />\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Header as=\"h5\">Cryptocurrency News</Card.Header>\n                <Card.Body className=\"news-list\" style={{ maxHeight: \"none\" }}>\n                  <News />\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n      <Footer />\n    </>\n  );\n}\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nexport default function ArticlesList({ data }) {\n  return (\n    <>\n      <ListGroup.Item as=\"li\">{data.title}</ListGroup.Item>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bitcoin1.e92be1a1.jpg\";","import React, { useState, useEffect } from \"react\";\n\nimport Header from \"../dashboard/Header\";\nimport Footer from \"../dashboard/Footer\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Image,\n  ListGroup,\n  Spinner,\n} from \"react-bootstrap\";\nimport Subscription from \"../subscription/Subscription\";\nimport ArticlesList from \"./ArticlesList\";\nimport bitcoin from \"../../assets/bitcoin1.jpg\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  title: yup.string().required(),\n  description: yup.string().required(),\n});\n\nexport default function Articles() {\n  const [showLoader, setShowLoader] = useState(false);\n  const [showArticles, setShowArticles] = useState(true);\n  const [isArticleAdded, setIsArticleAdded] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const [articles, setarticles] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  // load all articles on page load\n  useEffect(() => {\n    axios\n      .get(\"/api/articles\")\n      .then((response) => {\n        const result = JSON.parse(response.data.data);\n        // console.log(\"Articles = \", result);\n        setShowArticles(false);\n        setarticles(result);\n      })\n      .catch((error) => console.log(error));\n  }, [isArticleAdded]);\n\n  const submitForm = (data) => {\n    if (JSON.stringify({}) === \"{}\" && data) {\n      setShowLoader(true);\n      axios\n        .post(\"/api/article\", data)\n        .then((response) => {\n          const result = response.data;\n          result && setSuccessMsg(\"Your article has successfully added.\");\n          setTimeout(() => {\n            data = {};\n            setShowLoader(false);\n            setShowArticles(true);\n            setIsArticleAdded(\"article added\");\n            setSuccessMsg(\"\");\n            reset();\n          }, 2000);\n        })\n        .catch((error) => {\n          setShowLoader(false);\n          console.log(error);\n        });\n    }\n  };\n  return (\n    <>\n      <Header />\n      <main className=\"Container\" id=\"main\">\n        <Container fluid>\n          <Row>\n            <Col sm={8} className=\"p-4\">\n              <Image src={bitcoin} className=\"banner-img\" />\n            </Col>\n            <Col sm={4} className=\"p-4\">\n              <Card className=\"mb-4\">\n                <Card.Header as=\"h5\">Newsletter Subscription</Card.Header>\n                <Card.Body>\n                  <Subscription />\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={6} className=\"p-4\">\n              <Card>\n                <Card.Header as=\"h5\">All Articles</Card.Header>\n                <Card.Body>\n                  {/* <Card.Title>Special title treatment</Card.Title> */}\n                  <Card.Text as=\"div\">\n                    <ListGroup as=\"ul\">\n                      {showArticles ? (\n                        <div className=\"text-center\">\n                          <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"lg\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          />\n                        </div>\n                      ) : (\n                        articles.map((art, index) => {\n                          return <ArticlesList key={index} data={art} />;\n                        })\n                      )}\n                    </ListGroup>\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col sm={6} className=\"p-4\">\n              <Card>\n                <Card.Header as=\"h5\">Add Ariticles</Card.Header>\n                <Card.Body>\n                  <Card.Text>\n                    Articles on cryptocurrency are welcome to be added. Users\n                    can follow the latest trends and news about various\n                    Cryptocurrencies.\n                  </Card.Text>\n                  <form onSubmit={handleSubmit(submitForm)}>\n                    <div className=\"form-group mb-1\">\n                      <label htmlFor=\"title\">Article title</label>\n                      <input\n                        type=\"text\"\n                        className={\n                          (errors.title && \"required form-control\") ||\n                          \"form-control\"\n                        }\n                        placeholder=\"Article title\"\n                        name=\"title\"\n                        id=\"title\"\n                        autoComplete=\"off\"\n                        {...register(\"title\", { required: true })}\n                      />\n                      {errors?.title && (\n                        <p className=\"p-1 m-0 text-danger\">\n                          Article title is required\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"form-group mb-1\">\n                      <label htmlFor=\"description\">Article description</label>\n                      <Form.Group>\n                        <Form.Control\n                          className={\n                            (errors.title && \"required mb-1\") || \"mb-1\"\n                          }\n                          name=\"description\"\n                          id=\"description\"\n                          {...register(\"description\", { required: true })}\n                          as=\"textarea\"\n                          rows={6}\n                        />\n                      </Form.Group>\n                      {errors?.description && (\n                        <p className=\"p-1 m-0 text-danger\">\n                          Article description is required\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"form-group mt-3\">\n                      <Row>\n                        <Col sm={6}>\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-dark btn-lg btn-block\"\n                            style={{\n                              backgroundColor: \"#293250\",\n                              color: \"#fff\",\n                            }}\n                          >\n                            Add Article\n                            {showLoader && (\n                              <div className=\"float-right\">\n                                <Spinner\n                                  as=\"span\"\n                                  animation=\"border\"\n                                  size=\"sm\"\n                                  role=\"status\"\n                                  aria-hidden=\"true\"\n                                />\n                              </div>\n                            )}\n                          </button>\n                        </Col>\n                        <Col sm={6}>\n                          <button\n                            type=\"reset\"\n                            className=\"btn btn-dark btn-lg btn-block\"\n                            style={{\n                              backgroundColor: \"#293250\",\n                              color: \"#fff\",\n                            }}\n                          >\n                            Reset\n                          </button>\n                        </Col>\n                      </Row>\n                    </div>\n                    {successMsg && (\n                      <p className=\"text-center\" style={{ color: \"#00154f\" }}>\n                        {successMsg}\n                      </p>\n                    )}\n                  </form>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n      <Footer />\n    </>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport logo from \"../../assets/logo.svg\";\n\nimport axios from \"axios\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(4).max(15).required(),\n});\n\nexport default function Login() {\n  const [showLoader, setShowLoader] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const { setUser } = useContext(GlobalContext);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const submitForm = (data) => {\n    // console.log(\"DATA =\", data);\n    if (JSON.stringify({}) === \"{}\" && data) {\n      setShowLoader(true);\n      axios\n        .post(\"/api/users/login\", data)\n        .then((response) => {\n          // console.log(\"response \", response);\n          if (response.data?.success && response.data?.data) {\n            const result = response.data.data;\n            setUser({\n              token: result,\n            });\n            sessionStorage.setItem(\"token\", result);\n            setShowLoader(false);\n            // console.log(\"ReSULT = \", result);\n            // auth.login();\n            // history.push(\"/dashboard\");\n          } else {\n            setShowLoader(false);\n            setSuccessMsg(\"You forgot your email or password. Try again!\");\n          }\n        })\n        .catch((error) => {\n          setShowLoader(false);\n          setSuccessMsg(\"You forgot your email or password. Try again!\");\n          console.log(error);\n        });\n      setTimeout(() => {\n        data = {};\n        setShowLoader(false);\n        setSuccessMsg(\"\");\n        // reset();\n      }, 3000);\n    }\n  };\n  return !sessionStorage.getItem(\"token\") ? (\n    <Container fluid className=\"App\">\n      <Row className=\"pt-2\">\n        <Col md={{ span: 4, offset: 4 }}>\n          <p className=\"text-center\">\n            <Link to=\"/\">\n              <img\n                alt=\"Shri's Cryptocurrency MarketPlace\"\n                src={logo}\n                width=\"64\"\n                height=\"64\"\n                className=\"d-inline-block\"\n              />\n            </Link>\n          </p>\n          <form\n            className=\"p-3\"\n            style={{ backgroundColor: \"#ffd55a\", color: \"#293250\" }}\n            onSubmit={handleSubmit(submitForm)}\n          >\n            {successMsg && (\n              <p className=\"text-center text-danger\">{successMsg}</p>\n            )}\n            <h3 className=\"text-center\">Log in</h3>\n\n            <div className=\"form-group m-1\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter your email\"\n                name=\"email\"\n                id=\"email\"\n                autoFocus\n                autoComplete=\"off\"\n                {...register(\"email\", { required: true })}\n              />\n              {errors?.email && (\n                <p className=\"p-1 m-0 text-danger\">Enter valid email address</p>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                name=\"password\"\n                id=\"password\"\n                {...register(\"password\", { required: true })}\n              />\n              {errors?.password && (\n                <p className=\"p-1 m-0 text-danger\">\n                  Password is required. Please make sure your password is\n                  between 4 and 15 characters.\n                </p>\n              )}\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-dark btn-lg btn-block\"\n              style={{ backgroundColor: \"#293250\", color: \"#fff\" }}\n            >\n              Log in\n              {showLoader && (\n                <div className=\"float-right\">\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </button>\n            <p className=\"pt-2\">\n              <Link to=\"/register\">Create new account? Register!</Link>\n            </p>\n          </form>\n        </Col>\n      </Row>\n    </Container>\n  ) : (\n    <Redirect to=\"/dashboard\" />\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport logo from \"../../assets/logo.svg\";\n\nimport axios from \"axios\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(4).max(15).required(),\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\n});\n\nexport default function Register() {\n  const [showLoader, setShowLoader] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const submitForm = (data) => {\n    // console.log(\"DATA =\", data);\n    if (JSON.stringify({}) === \"{}\" && data) {\n      setShowLoader(true);\n      axios\n        .post(\"/api/users/register\", data)\n        .then((response) => {\n          // console.log(\"response====\", response);\n          const result = response.data;\n          result && setSuccessMsg(\"You have successfully registered.\");\n          setTimeout(() => {\n            data = {};\n            setShowLoader(false);\n            setSuccessMsg(\"\");\n            reset();\n          }, 2000);\n        })\n        .catch((error) => {\n          setShowLoader(false);\n          console.log(error);\n        });\n    }\n  };\n  // console.log(errors);\n  return !sessionStorage.getItem(\"token\") ? (\n    <Container fluid className=\"App\" id=\"register\">\n      <Row className=\"pt-2\">\n        <Col md={{ span: 4, offset: 4 }}>\n          <p className=\"text-center\">\n            <Link to=\"/\">\n              <img\n                alt=\"Shri Cryptocurrency MarketPlace\"\n                src={logo}\n                width=\"64\"\n                height=\"64\"\n                className=\"d-inline-block\"\n              />\n            </Link>\n          </p>\n          <form\n            className=\"p-3\"\n            style={{ backgroundColor: \"#ffd55a\", color: \"#293250\" }}\n            onSubmit={handleSubmit(submitForm)}\n          >\n            {successMsg && (\n              <p className=\"text-center\" style={{ color: \"#00154f\" }}>\n                {successMsg}\n              </p>\n            )}\n            <h3 className=\"text-center\">Register</h3>\n\n            <div className=\"form-group mb-1\">\n              <label htmlFor=\"firstName\">First name</label>\n              <input\n                type=\"text\"\n                className={\n                  (errors.firstName && \"required form-control\") ||\n                  \"form-control\"\n                }\n                placeholder=\"First name\"\n                name=\"firstName\"\n                id=\"firstName\"\n                autoFocus\n                autoComplete=\"off\"\n                {...register(\"firstName\", { required: true })}\n              />\n              {errors?.firstName && (\n                <p className=\"p-1 m-0 text-danger\">First Name is required</p>\n              )}\n            </div>\n\n            <div className=\"form-group m-1\">\n              <label htmlFor=\"lastName\">Last name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Last name\"\n                name=\"lastName\"\n                id=\"lastName\"\n                autoComplete=\"off\"\n                {...register(\"lastName\", { required: true })}\n              />\n              {errors?.lastName && (\n                <p className=\"p-1 m-0 text-danger\">Last Name is required</p>\n              )}\n            </div>\n\n            <div className=\"form-group m-1\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter your email\"\n                name=\"email\"\n                id=\"email\"\n                autoComplete=\"off\"\n                {...register(\"email\", { required: true })}\n              />\n              {errors?.email && (\n                <p className=\"p-1 m-0 text-danger\">Enter valid email address</p>\n              )}\n            </div>\n\n            <div className=\"form-group m-1\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                name=\"password\"\n                id=\"password\"\n                {...register(\"password\", { required: true })}\n              />\n              {errors?.password && (\n                <p className=\"p-1 m-0 text-danger\">Password is required</p>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Confirm Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                name=\"confirmPassword\"\n                id=\"confirmPassword\"\n                {...register(\"confirmPassword\", { required: true })}\n              />\n              {errors?.confirmPassword && (\n                <p className=\"p-1 m-0 text-danger\">Password should match</p>\n              )}\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-dark btn-lg btn-block\"\n              style={{ backgroundColor: \"#293250\", color: \"#fff\" }}\n            >\n              Register\n              {showLoader && (\n                <div className=\"float-right\">\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </button>\n            <p className=\"pt-2\">\n              <Link to=\"/login\">Already registered? Login!</Link>\n            </p>\n          </form>\n        </Col>\n      </Row>\n    </Container>\n  ) : (\n    <Redirect to=\"/dashboard\" />\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/styles.scss\";\n\nimport { ProtectedRoute } from \"./protected.route\";\nimport { Home, Dashboard } from \"./components/dashboard\";\nimport { Articles } from \"./components/articles\";\nimport { Login, Register } from \"./components/user\";\nimport { GlobalContext } from \"./context/GlobalContext\";\n\nfunction App() {\n  const [user, setUser] = useState({});\n\n  return (\n    <Router>\n      <Container fluid className=\"App\">\n        <Row>\n          <Col className=\"p-0\">\n            <Switch>\n              <GlobalContext.Provider value={{ user, setUser }}>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\n                <ProtectedRoute path=\"/articles\" component={Articles} />\n              </GlobalContext.Provider>\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}